생성자 : 객체가 생성될 때 초기화를 위해 실행되는 메소드
 	- 생성자 이름은 클래스 이름과 동일
	- 함수 만들어 질 때 제일 먼저 실행
	- 같은 메소드 이름을 가지나 다른 역할을 할 수 있다.
		public name()  !=  public name(int i, String 2)

특징
1. 생성자는 메소드
2. 생성자 이름은 클래스 이름과 반드시 동일
3. 생성자는 여러개 작성 가능(오버로딩)
4. 생성자는 new를 통해 객체를 생성할 때 객체당 한 번 호출
5. 생성자는 리턴 타입을 지정할 수 없다.
6. 생성자의 목적은 객체 초기화
7. 생성자는 객체가 생성될 때 반드시 호출(아무것도 없으면, 그래도 돌아감)

기본 생성자(디폴트 생성자)
- 문자는 NULL, 숫자는 0으로 처리한다.
- 자동으로 생성됨. (단, 아무것도 없을 때)
- 자동으로 생성되지 않을 경우 : 생성자를 임의로 만들면 생성안됨.

this 레퍼런스 : 객체 자신(class에서 만들어진 객체)에 대한 참조
- 컴파일러에 의한 자동관리, 개발자는 사용하기만 하면 됨
- ' this.멤버 ' 형태로 사용
- 메소드가 중복되어 쓰일 때

언제 필료?
- 객체의 멤버 변수와 메소드 변수의 이름이 같을 때
- 다른 메소드 호출시 객체 자신의 레퍼런스를 전달 할 때
- 메소드가 객체 자신의 레퍼런스를 반환 할 때

this()로 다른 생성자 호출(이런 면에서 this는 함수 포인터와 비슷)
주의
- 생성자 내에서만 사용해야 함
- 생성자 맨 앞에 사용되어야 함

객체의 치환
객체에서 이름은 참조변수이다. -> 내용이 복사되는 게 아니라 주소가 옮기는 것
				(포인터와 비슷)
pizza(참조 변수) = new Circle(); 	//new가 되어야 객체가 완성되는 거임. 
pizza2 = new Circle(int a);

pizza2 = pizza		-> pizza2 = pizza의 주소

객체 배열 : 객체를 배열로 생성
Circle = 클래스 이름
		Circle [] pizzaArray;
배열 객체에 대한 레퍼런스를 만드는 new
		pizzaArray = new Circle[5];	//객체를 만들기 위해 생성해야 함
배열의 객체 및 생성자를 호출하기 위한 new
for(int i = 0; i < 5; i++) {			// new를 이용해 생성
			pizzaArray[i] = new Circle(i, "");
		}
		
		pizza = pizzaArray[3];
		System.out.println(pizza.name + "'s r = "+pizza.radius);


f
- NULL 포인터 -> 오류잡기 위한 포인터