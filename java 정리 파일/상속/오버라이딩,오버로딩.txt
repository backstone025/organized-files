오버 라이딩
목적: 객체지향의 다형성 실형

다형성 실행
1. 오버라이딩 -> 실행 시간 다형성(동적 바인딩)
2. 오버로딩 ->  컴파일 타임 다형성(정적 바인딩)

오버라이딩 -> 연결리스트 구현 가능
java언어 -> 참조를 활용(<-> c언어: 포인터)
- null -> null를 쓰면 에러 발생

super : 오버라이딩 무시하고 서브클래스에서 수퍼 클래스의 멤버를 접근할 때
	사용하는 레퍼런스

Annotation ( @ )	: 실수 방지용
주석과 비슷하나 역할이 많음
- 수퍼 클래스의 모습 그대로 따라야 한다.
- @Override(오버라이딩 표시), 
   @Deprecated(없어질거라고 표시하는 것, 없어질 테니 감수하라는 뜻)

오버라이딩vs오버로딩
동일한 함수를 갈아엎음 -> 오버라이딩
이름만 -> 오버로딩
