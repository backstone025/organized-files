추상 메소드와 추상 클래스

추상 메소드
- 선언되어 있으나 구현되어 있지 않은 메소드
- abstract으로 선언

예) public abstract String getName();
- 추상 메소드의 구현은 서브 클래스에서 오버라이딩을 통해 함

추상 클래스
- abstract 키워드로 선언된 클래스
- 추상 메소드는 포함 할 수도 있고, 없을 수도 있음.
	* 추상 메소드를 포함한 클래스
	* 추상 메소드가 없는 클래스

- 추상 클래스만으로는 객체 생성 불가

단순 상속
- 추상 클래스가 수퍼 클래스인데, 상속한 서브클래스가 추상 메소드를 구현 안한 경우
- 상속받은 서브 클래스도 추상 클래스가 됨
	* 서브 클래스도 abstract로 선언

구현 상속
- 상속받고 서브클래스가 추상 메소드를 구현한 경우
- 수퍼 클래스의 추상 메소드를 오버라이딩 한 경우
- 서브 클래스는 추상 메소드가 아니다

추상 클래스의 용도
- 설계와 구현을 분리
	수퍼 클래스에서는 개념정의 -> 설계도 그리기
		서브 클래스마다 다른 구현이 필요한 메소드는 추상 메소드로 선언
	각 서브 클래스에서 기능 구체화 -> 설계도 대로 제작하기
		서브 클래스마다 목적에 맞게 추상 메소드를 구현

- 클래스의 구조를 계층화
	객체를 위한 틀이나 설계도도 복잡해 진다면
	그 모양도 간단-> 복잡,추상-> 세부, 상위-> 하위의 단계적인 구조화가 도움될 수 있음
