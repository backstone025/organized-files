상속
부모 클래스에 만들어진 필드, 메소드를 자식클래스가 물려 받는다.
장점: 동일한 특성을 재정의 할 필요 없어 자식 클래스가 간결해짐.

부모 클래스 ==  super class
자식 클래스 == sub class

extends 키워드 사용(수퍼 클래스를 확장한다는 개념)
ex) public class StudentWorker extends Student (student를 상속 받는 StudentWorker)

자바 상속의 특징
- 클래스의 다중 상속 미 지원(여러 조상으로 부터 상속 X, 하나만 상속 가능)
- 상속횟수는 무제한
- 상속의 최상위 조상 클래스는 java.lang.Object클래스
	모든 클래스는 자동으로 java.lang.Object를 상속 받는다.
	자바 컴파일러에 의해 자동으로 이루어진다. (신경안써도 된다.)

수퍼 클래스의 접근 지정자의 특징

private : 수퍼 클래스의 private 멤버는 다른 모든 클래스에 접근 불허
default :  같은 백키지 안에서 수퍼클래스와 서브 클래스 모두 접근 허용
public : 모든 클래스에 접근 가능

!![ protected ]!! : 팩키지가 다르더라도 서브클래스면 접근 가능하다.
상속 중요!	  	같은 패키지 내의 모든 클래스 접근 허용

질문 1
서브 클래스 객체가 생성될 때 서브 믈래스의 생성자와 슈퍼 클래스의 생성자가 모두 실행되는가?
아니면 서브 클래스의 생성자만 실행되는가?
답
둘 다 실행된다. 

질문 2
서브 클래스의 생성자와 슈퍼 클래스의 생성자 중 누가 먼저 실행되는가?
답
슈퍼 클래스의 생성자가 먼저 실행된다.

new에 의해 서브 클래스의 객체가 생성될 때
수퍼 클래스 생성자와 서브 클래스 생성자 모두 실행됨
호출순서 = 호출한 서브 클래스 > 슈퍼 클래스> . . . > 최상위 수퍼 클래스 생성자
실행 순서 = 최상위 수퍼 클래스 > 다음 서브 클래스 > . . . > 최하위 서브 클래스

서브 클래스에서 수퍼 클래스의 생성자 선택
상속 관계에서의 생성자
- 수퍼 클래스와 서브 클래스 각각 여러 생성자 작성가능
서브 클래스 생성자 작성 원칙
- 서버 클래스 생성자에서 수퍼 클래스 생성자 하나 선택
서브 클래스에서 수퍼 클래스의 생성자를 선택하지 않는 경우
- 컴파일러가 자동으로 수퍼 클래스의 기본 생성자 선택
서브 클래스에서 수퍼 클래스의 생성자를 선택하는 방법
- super() ->  오버 로딩이 아닌(<-> this.)

super()
- 서브 클래스에서 명시적으로 수퍼 클래스의 생성자 선택 호출
- 인자를 이용하여 수퍼 클래스의 적당한 생성자 호출
- 반드시 서브 클래스 생성자 코드의 맨 앞에 짜야 한다.