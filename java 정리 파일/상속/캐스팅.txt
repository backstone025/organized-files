상속 2

서브 클래스의 객체를 수퍼 클래스의 객체로 취급가능한가?
-> 된다.

업캐스팅(upcasting)
서브클래스 객체 -> 수퍼 클래스로 타입 변환(대입시 자동 변환)

예시)
class Person{...}
class student extends Person{...}

student s = new Strudent();
person p = s;	-> 업캐스팅, 자동타입변환

수퍼 클래스 타입의 레퍼런스 변수를 사용하여 업캐스팅 참조가 가능
	- 객체 내에 수퍼 클래스의 멤버만 접근 가능
		-> 옛 버전이 새 버전의 기능을 알 수 없는 것과 같다.

다운캐스팅 (downcasting)
수퍼 클래스 객체 -> 서브 클래스로 타입변환
- 개발자의 명시적 타입변환 필요
- 형변환에서 자료형 지정과 같음

예시)
class Person{...}
class student extends Person{...}

student s = new Strudent();
person p = s;

student s = (student)p;	// 다운캐스팅, (student)의 타입 변환 표시 필요

!! 주의 !!
서로 상속관계가 있는 실체가 있어야 한다.
(= 상위 클래스에서 다운캐스팅 할 때, 메모리 내용이 없으면 캐스팅 할 수 없다.)
(/= 이전 버전에서 새 버전의 기능을 끌어다 쓰려는 것과 같다.)

업캐스팅된 레퍼런스의 타입 판단
- 업캐스팅된 레퍼런스만으로는 특정 객체의 타입 판단이 어려움
	수퍼 클래스는 여러 서브 클래스에 상속되기 때문


instanceof 연산자
- 레퍼런스가 가리키는 객체의 타입 식별을 위해 사용



